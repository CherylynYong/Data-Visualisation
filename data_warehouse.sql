-- TASK C.2 DATA CLEANING 

-- ERROR 1: DUPLICATION PROBLEMS
-- EXPLORE OPERATIONAL DATABASE
SELECT CUSTOMER_ID, COUNT(*)
FROM MONEQUIP.CUSTOMER
GROUP BY CUSTOMER_ID
HAVING COUNT(*) > 1;

-- CLEANING DATA
CREATE TABLE CUSTOMER2 AS 
SELECT DISTINCT * FROM MONEQUIP.CUSTOMER;

-- ERROR 2: RELATIONSHIP PROBLEMS
-- EXPLORE OPERATIONAL DATABASE
SELECT * FROM HIRE 
WHERE EQUIPMENT_ID NOT IN
    （SELECT EQUIPMENT_ID
    FROM MONEQUIP.EQUIPMENT);

-- CLEANING DATA
DELETE FROM HIRE 
WHERE EQUIPMENT_ID NOT IN
    （SELECT EQUIPMENT_ID
    FROM MONEQUIP.EQUIPMENT);

-- ERROR 3: INCONSISTENT AND INCORRECT VALUES
-- (a) EXPLORE OPERATIONAL DATABASE
SELECT * FROM MONEQUIP.SALES M
WHERE M.QUANTITY < 0;

-- (a) CLEANING DATA
DELETE FROM SALES WHERE QUANTITY < 0;

-- (b) EXPLORE OPERATIONAL DATABASE
CREATE TABLE HIRE 
AS SELECT * FROM MONEQUIP.HIRE;

SELECT * FROM HIRE
WHERE TOTAL_HIRE_PRICE < 0;

-- (b) CLEANING DATA
DELETE FROM HIRE H
WHERE TOTAL_HIRE_PRICE < 0;

-- (c) EXPLORE OPERATIONAL DATABASE
SELECT * FROM  MONEQUIP.HIRE H
WHERE H.TOTAL_HIRE_PRICE != (H.UNIT_HIRE_PRICE * 0.5 * QUANTITY) AND H.START_DATE = H.END_DATE;

-- (c) CLEANING DATA
CREATE TABLE HIRE 
AS SELECT * FROM MONEQUIP.HIRE;

UPDATE HIRE H
SET H.TOTAL_HIRE_PRICE = H.UNIT_HIRE_PRICE * 0.5 * QUANTITY
WHERE H.START_DATE = H.END_DATE;

-- (d) EXPLORE OPERATIONAL DATABASE
SELECT * FROM MONEQUIP.HIRE
WHERE END_DATE < START_DATE;

-- (d) CLEANING DATA
DELETE FROM HIRE
WHERE END_DATE < START_DATE;

-- (e) EXPLORE OPERATIONAL DATABASE
SELECT * FROM MONEQUIP.HIRE
WHERE TOTAL_HIRE_PRICE != (END_DATE- START_DATE) * UNIT_HIRE_PRICE * QUANTITY
AND END_DATE != START_DATE;

-- (e) CLEANING DATA
CREATE TABLE HIRE 
AS SELECT * FROM MONEQUIP.HIRE;

UPDATE HIRE H
SET TOTAL_HIRE_PRICE = (END_DATE- START_DATE) * UNIT_HIRE_PRICE * QUANTITY
WHERE END_DATE != START_DATE;

-- TASK C.3 STAR SCHEMA VERSION 1

-- CREATE CUSTOMER TYPE DIMENSION
CREATE TABLE CUSTOMER_TYPE_DIM AS
SELECT * FROM MONEQUIP.CUSTOMER_TYPE;

-- CREATE CATEGORY DIMENSION
CREATE TABLE CATEGORY_DIM AS
SELECT * FROM MONEQUIP.CATEGORY;

-- CREATE SEASON DIMENSION
CREATE TABLE SEASON_DIM
    (SEASON_ID NUMBER(1),
    SEASON_DESCRIPTION VARCHAR2(20),
    START_MONTH CHAR(3),
    END_MONTH CHAR(3));

INSERT INTO SEASON_DIM VALUES (1, 'SUMMER', 'DEC', 'FEB');
INSERT INTO SEASON_DIM VALUES (2, 'AUTUMN', 'MAR', 'MAY');
INSERT INTO SEASON_DIM VALUES (3, 'WINTER', 'JUN', 'AUG');
INSERT INTO SEASON_DIM VALUES (4, 'SPRING', 'SEP', 'NOV');

-- CREATE COMPANY BRANCH DIMENSION
CREATE TABLE COMPANY_BRANCH_DIM AS
SELECT DISTINCT COMPANY_BRANCH
FROM MONEQUIP.STAFF;

-- CREATE TIME DIMENSION 
CREATE TABLE TIME_DIM
    (TIME_ID NUMBER (6),
    YEAR NUMBER(4),
    MONTH NUMBER(2));

INSERT INTO TIME_DIM (TIME_ID, YEAR, MONTH)
SELECT DISTINCT 
    TO_CHAR(SALES_DATE, 'YYYYMM') AS TIME_ID,
    TO_NUMBER(TO_CHAR(SALES_DATE, 'YYYY')) AS YEAR,
    TO_NUMBER(TO_CHAR(SALES_DATE, 'MM')) AS MONTH
FROM MONEQUIP.SALES
ORDER BY TIME_ID;

-- CREATE SALES PRICE SCALE DIMENSION
CREATE TABLE SALES_PRICE_SCALE_DIM (
    PRICE_SCALE_ID NUMBER,
    PRICE_SALES_DESCRIPTION VARCHAR2(20),
    MIN_SALES_PRICE NUMBER(5),
    MAX_SALES_PRICE NUMBER(7)
);

INSERT INTO SALES_PRICE_SCALE_DIM VALUES(1, 'LOW SALES', 0, 5000);
INSERT INTO SALES_PRICE_SCALE_DIM VALUES(2, 'MEDIUM SALES', 5000, 10000);
INSERT INTO SALES_PRICE_SCALE_DIM VALUES(3, 'HIGH SALES', 10000, 999999);

-- HIRE TEMPORARY FACT V1
CREATE TABLE HIRE_FACT_TEMP_V1 AS
SELECT 
    TO_CHAR(H.START_DATE, 'YYYYMM') AS TIME_ID,
    CT.CUSTOMER_TYPE_ID,
    ST.COMPANY_BRANCH,
    CAT.CATEGORY_ID,
    H.TOTAL_HIRE_PRICE,
    H.QUANTITY
FROM MONEQUIP.CUSTOMER_TYPE CT, MONEQUIP.CUSTOMER C, MONEQUIP.HIRE H,
MONEQUIP.STAFF ST, MONEQUIP.EQUIPMENT E, MONEQUIP.CATEGORY CAT
WHERE CT.CUSTOMER_TYPE_ID = C.CUSTOMER_TYPE_ID
AND C.CUSTOMER_ID = H.CUSTOMER_ID
AND H.STAFF_ID = ST.STAFF_ID
AND H.EQUIPMENT_ID = E.EQUIPMENT_ID
AND E.CATEGORY_ID = CAT.CATEGORY_ID;

ALTER TABLE HIRE_FACT_TEMP_V1
ADD (SEASON_ID NUMBER(1));

UPDATE HIRE_FACT_TEMP_V1
SET SEASON_ID = 1
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('12', '01', '02');

UPDATE HIRE_FACT_TEMP_V1
SET SEASON_ID = 2
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('03', '04', '05');

UPDATE HIRE_FACT_TEMP_V1
SET SEASON_ID = 3
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('06', '07', '08');

UPDATE HIRE_FACT_TEMP_V1
SET SEASON_ID = 4
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('09', '10', '11');

-- FINAL HIRE FACT V1
CREATE TABLE HIRE_FACT_V1 AS
SELECT 
    TIME_ID, 
    SEASON_ID,
    CUSTOMER_TYPE_ID,
    COMPANY_BRANCH,
    CATEGORY_ID,
    SUM(TOTAL_HIRE_PRICE) AS TOTAL_HIRE_REVENUE,
    COUNT (CATEGORY_ID) AS NUMBER_OF_CATEGORIES_HIRED,
    SUM(QUANTITY) AS NUMBER_OF_EQUIPMENTS_HIRED
FROM HIRE_FACT_TEMP_V1
GROUP BY 
    TIME_ID, 
    SEASON_ID,
    CUSTOMER_TYPE_ID,
    COMPANY_BRANCH,
    CATEGORY_ID
ORDER BY TIME_ID;

-- SALES TEMPORARY FACT 
CREATE TABLE SALES_FACT_TEMP_V1 AS
SELECT 
    TO_CHAR(S.SALES_DATE, 'YYYYMM') AS TIME_ID,
    CT.CUSTOMER_TYPE_ID,
    ST.COMPANY_BRANCH,
    CAT.CATEGORY_ID,
    S.TOTAL_SALES_PRICE,
    S.QUANTITY
FROM MONEQUIP.SALES S, MONEQUIP.CUSTOMER C, MONEQUIP.CUSTOMER_TYPE CT, 
MONEQUIP.STAFF ST, MONEQUIP.CATEGORY CAT, MONEQUIP.EQUIPMENT E
WHERE S.CUSTOMER_ID = C.CUSTOMER_ID
AND C.CUSTOMER_TYPE_ID = CT.CUSTOMER_TYPE_ID 
AND S.STAFF_ID = ST.STAFF_ID
AND S.EQUIPMENT_ID = E.EQUIPMENT_ID
AND E.CATEGORY_ID = CAT.CATEGORY_ID;

-- ADD SEASON ID COLUMN 
ALTER TABLE SALES_FACT_TEMP_V1
ADD (SEASON_ID NUMBER(1));

UPDATE SALES_FACT_TEMP_V1
SET SEASON_ID = 1
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('12', '01', '02');

UPDATE SALES_FACT_TEMP_V1
SET SEASON_ID = 2
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('03', '04', '05');

UPDATE SALES_FACT_TEMP_V1
SET SEASON_ID = 3
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('06', '07', '08'); 

UPDATE SALES_FACT_TEMP_V1
SET SEASON_ID = 4
WHERE TO_CHAR(TO_DATE(TIME_ID, 'YYYYMM'), 'MM') IN ('09', '10', '11'); 

-- ADD PRICE SCALES ID 
ALTER TABLE SALES_FACT_TEMP_V1
ADD (PRICE_SCALE_ID NUMBER(1));

-- BASED ON THE VALUE GIVEN ON SPECIFICATION
UPDATE SALES_FACT_TEMP_V1
SET PRICE_SCALE_ID = 
    (CASE
        WHEN TOTAL_SALES_PRICE > 0 AND TOTAL_SALES_PRICE < 5000 THEN '1'
        WHEN TOTAL_SALES_PRICE >= 5000 AND TOTAL_SALES_PRICE <= 10000 THEN '2'
        WHEN TOTAL_SALES_PRICE > 10000 THEN '3'
        ELSE NULL
    END);

-- FINAL SALES FACT V1
CREATE TABLE SALES_FACT_V1 AS 
SELECT 
    TIME_ID,
    SEASON_ID,
    CUSTOMER_TYPE_ID,
    COMPANY_BRANCH,
    CATEGORY_ID,
    PRICE_SCALE_ID,
    SUM(TOTAL_SALES_PRICE) AS TOTAL_SALES_REVENUE,
    COUNT (CATEGORY_ID) AS NUMBER_OF_CATEGORIES_SOLD,
    SUM(QUANTITY) AS NUMBER_OF_EQUIPMENT_SOLD
FROM 
    SALES_FACT_TEMP_V1
GROUP BY 
    TIME_ID,
    SEASON_ID,
    CUSTOMER_TYPE_ID,
    COMPANY_BRANCH,
    CATEGORY_ID,
    PRICE_SCALE_ID
ORDER BY
    TIME_ID;

-- TASK C.3 STAR SCHEMA VERSION 2
-- SALES TIME DIMENSION
CREATE TABLE SALES_TIME_DIM AS
SELECT SALES_DATE
FROM MONEQUIP.SALES;

-- HIRE TIME DIMENSION
CREATE TABLE HIRE_TIME_DIM AS
SELECT START_DATE
FROM MONEQUIP.HIRE;

-- CUSTOMER DIMENSION
CREATE TABLE CUSTOMER_DIM AS
SELECT * FROM MONEQUIP.CUSTOMER;

-- EQUIPMENT DIM
CREATE TABLE EQUIPMENT_DIM AS 
SELECT * FROM MONEQUIP.EQUIPMENT;

-- FINAL HIRE FACT V2
CREATE TABLE HIRE_FACT_V2 AS
SELECT 
    H.START_DATE,
    CAT.CATEGORY_ID,
    ST.COMPANY_BRANCH,
    C.CUSTOMER_ID,
    SUM(H.TOTAL_HIRE_PRICE) AS TOTAL_HIRE_REVENUE
FROM MONEQUIP.CUSTOMER C, MONEQUIP.HIRE H, MONEQUIP.STAFF ST, MONEQUIP.EQUIPMENT E, MONEQUIP.CATEGORY CAT
WHERE H.EQUIPMENT_ID = E.EQUIPMENT_ID
AND E.CATEGORY_ID = CAT.CATEGORY_ID
AND H.STAFF_ID = ST.STAFF_ID
AND C.CUSTOMER_ID = H.CUSTOMER_ID
GROUP BY
    H.START_DATE,
    CAT.CATEGORY_ID,
    ST.COMPANY_BRANCH,
    C.CUSTOMER_ID,
    E.EQUIPMENT_ID
ORDER BY H.START_DATE;

-- FINAL SALES FACT V2
CREATE TABLE SALES_FACT_V2 AS
SELECT 
    S.SALES_DATE,
    CAT.CATEGORY_ID,
    ST.COMPANY_BRANCH,
    C.CUSTOMER_ID,
    SUM(S.TOTAL_SALES_PRICE) AS TOTAL_SALES_REVENUE
FROM MONEQUIP.CUSTOMER C, MONEQUIP.SALES S, MONEQUIP.STAFF ST, MONEQUIP.EQUIPMENT E, MONEQUIP.CATEGORY CAT
WHERE S.EQUIPMENT_ID = E.EQUIPMENT_ID
AND E.CATEGORY_ID = CAT.CATEGORY_ID
AND S.STAFF_ID = ST.STAFF_ID
AND C.CUSTOMER_ID = S.CUSTOMER_ID
GROUP BY
    S.SALES_DATE,
    CAT.CATEGORY_ID,
    ST.COMPANY_BRANCH,
    C.CUSTOMER_ID,
    E.EQUIPMENT_ID
ORDER BY S.SALES_DATE;
